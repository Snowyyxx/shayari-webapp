{"ast":null,"code":"var _jsxFileName = \"/home/adityaa/Desktop/stuff/code/shayari/react-code/src/CommentSection.js\";\nimport React, { useEffect, useState } from \"react\";\nfunction Comments({\n  shayariId,\n  showcomments,\n  setShowComments\n}) {\n  const [comments, setComments] = useState([]);\n  const [content, setContent] = useState('');\n  useEffect(() => {\n    if (showcomments) {\n      fetchComments();\n    }\n  }, [showcomments]);\n  const fetchComments = () => {\n    fetch(`http://127.0.0.1:8000/comments/?shayari=${shayariId}`).then(response => response.json()).then(data => {\n      const fetched_comments = data.map(elem => ({\n        id: elem.id,\n        shayari: elem.shayari,\n        content: elem.content\n      }));\n      setComments(fetched_comments);\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newComment = {\n      content,\n      shayari: shayariId\n    };\n    fetch('http://127.0.0.1:8000/comments/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newComment)\n    }).then(() => {\n      setContent('');\n      fetchComments();\n    });\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, showcomments && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-button\",\n    onClick: () => setShowComments(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Comments\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"add-comment-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Add a comment...\",\n    value: content,\n    onChange: e => setContent(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, \"Post Comment\")), comments.map(elem => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment\",\n    key: elem.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }, elem.content)))));\n}\nexport default Comments;","map":{"version":3,"names":["React","useEffect","useState","Comments","shayariId","showcomments","setShowComments","comments","setComments","content","setContent","fetchComments","fetch","then","response","json","data","fetched_comments","map","elem","id","shayari","handleSubmit","e","preventDefault","newComment","method","headers","body","JSON","stringify","createElement","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","placeholder","value","onChange","target","type","key"],"sources":["/home/adityaa/Desktop/stuff/code/shayari/react-code/src/CommentSection.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction Comments({ shayariId, showcomments, setShowComments }) {\n    const [comments, setComments] = useState([]);\n    const [content, setContent] = useState('');\n\n    useEffect(() => {\n        if (showcomments) {\n            fetchComments();\n        }\n    }, [showcomments]);\n\n    const fetchComments = () => {\n        fetch(`http://127.0.0.1:8000/comments/?shayari=${shayariId}`)\n            .then(response => response.json())\n            .then(data => {\n                const fetched_comments = data.map(elem => ({\n                    id: elem.id,\n                    shayari: elem.shayari,\n                    content: elem.content\n                }));\n                setComments(fetched_comments);\n            });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const newComment = { content, shayari: shayariId };\n        fetch('http://127.0.0.1:8000/comments/', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(newComment)\n        }).then(() => {\n            setContent('');\n            fetchComments();\n        });\n    };\n\n    return (\n        <>\n            {showcomments && (\n                <div className=\"comments\">\n                    <button className=\"close-button\" onClick={() => setShowComments(false)}>&times;</button>\n                    <h3>Comments</h3>\n                    <form onSubmit={handleSubmit} className='add-comment-form'>\n                        <input \n                            placeholder=\"Add a comment...\"\n                            value={content}\n                            onChange={(e) => setContent(e.target.value)}\n                        />\n                        <button type=\"submit\">Post Comment</button>\n                    </form>\n                    {comments.map((elem) => (\n                        <div className=\"comment\" key={elem.id}>\n                            <p>{elem.content}</p>\n                        </div>\n                    ))}\n                </div>\n            )}\n        </>\n    );\n}\n\nexport default Comments;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}