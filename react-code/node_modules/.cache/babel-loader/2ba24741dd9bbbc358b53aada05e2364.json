{"ast":null,"code":"var _jsxFileName = \"/home/adityaa/Desktop/stuff/code/shayari/react-code/src/CommentSection.js\";\n// CommentSection.js\n\nimport React, { useEffect, useState, useContext, useCallback } from 'react';\nimport { AuthContext } from './AuthContext';\nimport CommentList from './CommentsList';\nfunction CommentSection({\n  shayariId,\n  showComments,\n  setShowComments\n}) {\n  const [content, setContent] = useState('');\n  const {\n    authTokens\n  } = useContext(AuthContext);\n  const fetchComments = useCallback(() => {\n    // This function is now in CommentList\n    // Left here in case you need additional logic\n  }, [shayariId]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newComment = {\n      content,\n      shayari: shayariId\n    };\n    fetch('http://127.0.0.1:8000/comments/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${authTokens === null || authTokens === void 0 ? void 0 : authTokens.access}`\n      },\n      body: JSON.stringify(newComment)\n    }).then(async response => {\n      if (response.ok) {\n        setContent('');\n        // Optionally, refresh comments\n        // You might need to pass a function from CommentList to refresh comments here\n      } else {\n        const errorData = await response.json();\n        console.error('Error posting comment:', errorData);\n        alert(`Failed to post comment: ${errorData.detail || 'Unknown error'}`);\n      }\n    }).catch(error => console.error('Error posting comment:', error));\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-button\",\n    onClick: () => setShowComments(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"Comments\"), authTokens ? /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"add-comment-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Add a comment...\",\n    value: content,\n    onChange: e => setContent(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, \"Post Comment\")) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \"Please log in to add a comment.\"), /*#__PURE__*/React.createElement(CommentList, {\n    shayariId: shayariId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  })));\n}\nexport default CommentSection;","map":{"version":3,"names":["React","useEffect","useState","useContext","useCallback","AuthContext","CommentList","CommentSection","shayariId","showComments","setShowComments","content","setContent","authTokens","fetchComments","handleSubmit","e","preventDefault","newComment","shayari","fetch","method","headers","access","body","JSON","stringify","then","response","ok","errorData","json","console","error","alert","detail","catch","createElement","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","placeholder","value","onChange","target","required","type"],"sources":["/home/adityaa/Desktop/stuff/code/shayari/react-code/src/CommentSection.js"],"sourcesContent":["// CommentSection.js\n\nimport React, { useEffect, useState, useContext, useCallback } from 'react';\nimport { AuthContext } from './AuthContext';\nimport CommentList from './CommentsList';\n\nfunction CommentSection({ shayariId, showComments, setShowComments }) {\n    const [content, setContent] = useState('');\n    const { authTokens } = useContext(AuthContext);\n\n    const fetchComments = useCallback(() => {\n        // This function is now in CommentList\n        // Left here in case you need additional logic\n    }, [shayariId]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const newComment = { content, shayari: shayariId };\n        fetch('http://127.0.0.1:8000/comments/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${authTokens?.access}`,\n            },\n            body: JSON.stringify(newComment),\n        })\n            .then(async (response) => {\n                if (response.ok) {\n                    setContent('');\n                    // Optionally, refresh comments\n                    // You might need to pass a function from CommentList to refresh comments here\n                } else {\n                    const errorData = await response.json();\n                    console.error('Error posting comment:', errorData);\n                    alert(`Failed to post comment: ${errorData.detail || 'Unknown error'}`);\n                }\n            })\n            .catch((error) => console.error('Error posting comment:', error));\n    };\n\n    return (\n        <>\n            \n                {<div className=\"comment-section\">\n                    <button className=\"close-button\" onClick={() => setShowComments(false)}>\n                        &times;\n                    </button>\n                    <h3>Comments</h3>\n                    {authTokens ? (\n                        <form onSubmit={handleSubmit} className=\"add-comment-form\">\n                            <input\n                                placeholder=\"Add a comment...\"\n                                value={content}\n                                onChange={(e) => setContent(e.target.value)}\n                                required\n                            />\n                            <button type=\"submit\">Post Comment</button>\n                        </form>\n                    ) : (\n                        <p>Please log in to add a comment.</p>\n                    )}\n                    {/* Include the CommentList component */}\n                    <CommentList shayariId={shayariId} />\n                </div>}\n            \n        </>\n    );\n}\n\nexport default CommentSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}