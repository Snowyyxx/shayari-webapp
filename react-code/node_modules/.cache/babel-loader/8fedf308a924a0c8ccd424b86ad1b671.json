{"ast":null,"code":"var _jsxFileName = \"/home/adityaa/Desktop/stuff/code/shayari/react-code/src/CommentSection.js\";\nimport React, { useEffect, useState } from \"react\";\nfunction Comments({\n  shayariId\n}) {\n  const [comments, setComments] = useState([]);\n  const [content, setContent] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newComment = {\n      content,\n      shayari: shayariId\n    }; // Include shayariId in the comment payload\n    fetch(`http://127.0.0.1:8000/comments/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newComment)\n    }).then(() => {\n      setContent(''); // Clear the input field after submission\n      // Optionally, you can re-fetch comments to update the list after adding a new one\n      fetchComments();\n    });\n  };\n  const fetchComments = () => {\n    fetch(`http://127.0.0.1:8000/comments/?shayari=${shayariId}`).then(response => response.json()).then(data => {\n      const fetched_comments = data.map(elem => ({\n        id: elem.id,\n        shayari: elem.shayari,\n        content: elem.content\n      }));\n      setComments(fetched_comments);\n    }).catch(error => console.error('Error fetching comments:', error));\n  };\n  useEffect(() => {\n    fetchComments(); // Fetch comments when the component mounts or shayariId changes\n  }, [shayariId]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"add-comment-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Add comments :)\",\n    value: content,\n    onChange: e => setContent(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Add Comment\")), comments.map((elem, idx) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment\",\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, elem.content))));\n}\nexport default Comments;","map":{"version":3,"names":["React","useEffect","useState","Comments","shayariId","comments","setComments","content","setContent","handleSubmit","e","preventDefault","newComment","shayari","fetch","method","headers","body","JSON","stringify","then","fetchComments","response","json","data","fetched_comments","map","elem","id","catch","error","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","required","type","idx","key"],"sources":["/home/adityaa/Desktop/stuff/code/shayari/react-code/src/CommentSection.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction Comments({ shayariId }) {\n    const [comments, setComments] = useState([]);\n    const [content, setContent] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const newComment = { content, shayari: shayariId };  // Include shayariId in the comment payload\n        fetch(`http://127.0.0.1:8000/comments/`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(newComment),\n        }).then(() => {\n            setContent('');  // Clear the input field after submission\n            // Optionally, you can re-fetch comments to update the list after adding a new one\n            fetchComments();\n        });\n    };\n\n    const fetchComments = () => {\n        fetch(`http://127.0.0.1:8000/comments/?shayari=${shayariId}`)\n            .then(response => response.json())\n            .then(data => {\n                const fetched_comments = data.map(elem => ({\n                    id: elem.id,\n                    shayari: elem.shayari,\n                    content: elem.content\n                }));\n                setComments(fetched_comments);\n            })\n            .catch(error => console.error('Error fetching comments:', error));\n    };\n\n    useEffect(() => {\n        fetchComments();  // Fetch comments when the component mounts or shayariId changes\n    }, [shayariId]);\n\n    return (\n        <div className=\"comments\">\n            <form onSubmit={handleSubmit} className=\"add-comment-form\">\n                <input\n                    placeholder=\"Add comments :)\"\n                    value={content}\n                    onChange={(e) => setContent(e.target.value)}\n                    required\n                />\n                <button type=\"submit\">Add Comment</button>\n            </form>\n            {comments.map((elem, idx) => (\n                <div className=\"comment\" key={idx}>\n                    <p>{elem.content}</p>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default Comments;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}