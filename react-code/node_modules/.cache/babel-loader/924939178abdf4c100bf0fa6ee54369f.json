{"ast":null,"code":"var _jsxFileName = \"/home/adityaa/Desktop/stuff/code/shayari/react-code/src/AuthContext.js\";\n// AuthContext.js\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport jwt_decode from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom';\nexport const AuthContext = createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  const navigate = useNavigate();\n  const [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null);\n  const [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null);\n  const loginUser = async (username, password) => {\n    const response = await fetch('http://127.0.0.1:8000/api/login/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n      return true;\n    } else {\n      alert('Invalid credentials');\n      return false;\n    }\n  };\n  const logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem('authTokens');\n    navigate('/login');\n  };\n  const updateToken = async () => {\n    const response = await fetch('http://127.0.0.1:8000/api/token/refresh/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        refresh: authTokens === null || authTokens === void 0 ? void 0 : authTokens.refresh\n      })\n    });\n    const data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n    } else {\n      logoutUser();\n    }\n  };\n  useEffect(() => {\n    if (authTokens) {\n      const interval = setInterval(() => {\n        updateToken();\n      }, 1000 * 60 * 4); // Every 4 minutes\n\n      return () => clearInterval(interval);\n    }\n  }, [authTokens]);\n  const contextData = {\n    user,\n    authTokens,\n    loginUser,\n    logoutUser\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: contextData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }\n  }, children);\n};","map":{"version":3,"names":["React","createContext","useState","useEffect","jwt_decode","useNavigate","AuthContext","AuthProvider","children","navigate","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","loginUser","username","password","response","fetch","method","headers","body","stringify","data","json","status","access","setItem","alert","logoutUser","removeItem","updateToken","refresh","interval","setInterval","clearInterval","contextData","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/adityaa/Desktop/stuff/code/shayari/react-code/src/AuthContext.js"],"sourcesContent":["// AuthContext.js\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport jwt_decode from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const navigate = useNavigate();\n\n    const [authTokens, setAuthTokens] = useState(() =>\n        localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null\n    );\n    const [user, setUser] = useState(() =>\n        localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null\n    );\n\n    const loginUser = async (username, password) => {\n        const response = await fetch('http://127.0.0.1:8000/api/login/', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ username, password }),\n        });\n\n        const data = await response.json();\n\n        if (response.status === 200) {\n            setAuthTokens(data);\n            setUser(jwt_decode(data.access));\n            localStorage.setItem('authTokens', JSON.stringify(data));\n            return true;\n        } else {\n            alert('Invalid credentials');\n            return false;\n        }\n    };\n\n    const logoutUser = () => {\n        setAuthTokens(null);\n        setUser(null);\n        localStorage.removeItem('authTokens');\n        navigate('/login');\n    };\n\n    const updateToken = async () => {\n        const response = await fetch('http://127.0.0.1:8000/api/token/refresh/', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ refresh: authTokens?.refresh }),\n        });\n\n        const data = await response.json();\n\n        if (response.status === 200) {\n            setAuthTokens(data);\n            setUser(jwt_decode(data.access));\n            localStorage.setItem('authTokens', JSON.stringify(data));\n        } else {\n            logoutUser();\n        }\n    };\n\n    useEffect(() => {\n        if (authTokens) {\n            const interval = setInterval(() => {\n                updateToken();\n            }, 1000 * 60 * 4); // Every 4 minutes\n\n            return () => clearInterval(interval);\n        }\n    }, [authTokens]);\n\n    const contextData = {\n        user,\n        authTokens,\n        loginUser,\n        logoutUser,\n    };\n\n    return <AuthContext.Provider value={contextData}>{children}</AuthContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}