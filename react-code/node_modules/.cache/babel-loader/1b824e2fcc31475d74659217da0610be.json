{"ast":null,"code":"var _jsxFileName = \"/home/adityaa/Desktop/stuff/code/shayari/react-code/src/CommentSection.js\";\n// commentsection.js\nimport React, { useEffect, useState, useContext } from 'react';\nimport { AuthContext } from './AuthContext';\nfunction Comments({\n  shayariId,\n  showcomments,\n  setShowComments\n}) {\n  const [comments, setComments] = useState([]);\n  const [content, setContent] = useState('');\n  const {\n    authTokens\n  } = useContext(AuthContext);\n  useEffect(() => {\n    if (showcomments) {\n      fetchComments();\n    }\n  }, [showcomments]);\n  const fetchComments = () => {\n    fetch(`http://127.0.0.1:8000/comments/?shayari=${shayariId}`).then(response => response.json()).then(data => {\n      setComments(data);\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newComment = {\n      content,\n      shayari: shayariId\n    };\n    fetch('http://127.0.0.1:8000/comments/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${authTokens.access}`\n      },\n      body: JSON.stringify(newComment)\n    }).then(() => {\n      setContent('');\n      fetchComments();\n    });\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, showcomments && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-button\",\n    onClick: () => setShowComments(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Comments\"), authTokens ? /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"add-comment-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Add a comment...\",\n    value: content,\n    onChange: e => setContent(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, \"Post Comment\")) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"Please log in to add a comment.\"), comments.map(elem => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment\",\n    key: elem.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 32\n    }\n  }, elem.user.username, \":\"), \" \", elem.content)))));\n}\nexport default Comments;","map":{"version":3,"names":["React","useEffect","useState","useContext","AuthContext","Comments","shayariId","showcomments","setShowComments","comments","setComments","content","setContent","authTokens","fetchComments","fetch","then","response","json","data","handleSubmit","e","preventDefault","newComment","shayari","method","headers","access","body","JSON","stringify","createElement","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","placeholder","value","onChange","target","type","map","elem","key","id","user","username"],"sources":["/home/adityaa/Desktop/stuff/code/shayari/react-code/src/CommentSection.js"],"sourcesContent":["// commentsection.js\nimport React, { useEffect, useState, useContext } from 'react';\nimport { AuthContext } from './AuthContext';\n\nfunction Comments({ shayariId, showcomments, setShowComments }) {\n    const [comments, setComments] = useState([]);\n    const [content, setContent] = useState('');\n    const { authTokens } = useContext(AuthContext);\n\n    useEffect(() => {\n        if (showcomments) {\n            fetchComments();\n        }\n    }, [showcomments]);\n\n    const fetchComments = () => {\n        fetch(`http://127.0.0.1:8000/comments/?shayari=${shayariId}`)\n            .then((response) => response.json())\n            .then((data) => {\n                setComments(data);\n            });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const newComment = { content, shayari: shayariId };\n        fetch('http://127.0.0.1:8000/comments/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${authTokens.access}`,\n            },\n            body: JSON.stringify(newComment),\n        }).then(() => {\n            setContent('');\n            fetchComments();\n        });\n    };\n\n    return (\n        <>\n            {showcomments && (\n                <div className=\"comments\">\n                    <button className=\"close-button\" onClick={() => setShowComments(false)}>&times;</button>\n                    <h3>Comments</h3>\n                    {authTokens ? (\n                        <form onSubmit={handleSubmit} className='add-comment-form'>\n                            <input\n                                placeholder=\"Add a comment...\"\n                                value={content}\n                                onChange={(e) => setContent(e.target.value)}\n                            />\n                            <button type=\"submit\">Post Comment</button>\n                        </form>\n                    ) : (\n                        <p>Please log in to add a comment.</p>\n                    )}\n                    {comments.map((elem) => (\n                        <div className=\"comment\" key={elem.id}>\n                            <p><strong>{elem.user.username}:</strong> {elem.content}</p>\n                        </div>\n                    ))}\n                </div>\n            )}\n        </>\n    );\n}\n\nexport default Comments;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}