{"ast":null,"code":"var _jsxFileName = \"/home/adityaa/Desktop/stuff/code/shayari/react-code/src/CommentSection.js\";\n// CommentSection.js\n\nimport React, { useState, useContext } from 'react';\nimport { AuthContext } from './AuthContext';\nimport CommentList from './CommentList';\nfunction CommentSection({\n  shayariId\n}) {\n  const [content, setContent] = useState('');\n  const {\n    authTokens\n  } = useContext(AuthContext);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newComment = {\n      content,\n      shayari: shayariId\n    };\n    fetch('http://127.0.0.1:8000/comments/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${authTokens === null || authTokens === void 0 ? void 0 : authTokens.access}`\n      },\n      body: JSON.stringify(newComment)\n    }).then(async response => {\n      if (response.ok) {\n        setContent('');\n        // Optionally refresh comments\n      } else {\n        const errorData = await response.json();\n        console.error('Error posting comment:', errorData);\n        alert(`Failed to post comment: ${errorData.detail || 'Unknown error'}`);\n      }\n    }).catch(error => console.error('Error posting comment:', error));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Comments\"), authTokens ? /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"add-comment-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Add a comment...\",\n    value: content,\n    onChange: e => setContent(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Post Comment\")) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Please log in to add a comment.\"), /*#__PURE__*/React.createElement(CommentList, {\n    shayariId: shayariId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }));\n}\nexport default CommentSection;","map":{"version":3,"names":["React","useState","useContext","AuthContext","CommentList","CommentSection","shayariId","content","setContent","authTokens","handleSubmit","e","preventDefault","newComment","shayari","fetch","method","headers","Authorization","access","body","JSON","stringify","then","response","ok","errorData","json","console","error","alert","detail","catch","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","required","type"],"sources":["/home/adityaa/Desktop/stuff/code/shayari/react-code/src/CommentSection.js"],"sourcesContent":["// CommentSection.js\n\nimport React, { useState, useContext } from 'react';\nimport { AuthContext } from './AuthContext';\nimport CommentList from './CommentList';\n\nfunction CommentSection({ shayariId }) {\n    const [content, setContent] = useState('');\n    const { authTokens } = useContext(AuthContext);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const newComment = { content, shayari: shayariId };\n        fetch('http://127.0.0.1:8000/comments/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${authTokens?.access}`,\n            },\n            body: JSON.stringify(newComment),\n        })\n            .then(async (response) => {\n                if (response.ok) {\n                    setContent('');\n                    // Optionally refresh comments\n                } else {\n                    const errorData = await response.json();\n                    console.error('Error posting comment:', errorData);\n                    alert(`Failed to post comment: ${errorData.detail || 'Unknown error'}`);\n                }\n            })\n            .catch((error) => console.error('Error posting comment:', error));\n    };\n\n    return (\n        <div className=\"comment-section\">\n            <h3>Comments</h3>\n            {authTokens ? (\n                <form onSubmit={handleSubmit} className=\"add-comment-form\">\n                    <input\n                        placeholder=\"Add a comment...\"\n                        value={content}\n                        onChange={(e) => setContent(e.target.value)}\n                        required\n                    />\n                    <button type=\"submit\">Post Comment</button>\n                </form>\n            ) : (\n                <p>Please log in to add a comment.</p>\n            )}\n            {/* Include the CommentList component */}\n            <CommentList shayariId={shayariId} />\n        </div>\n    );\n}\n\nexport default CommentSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}